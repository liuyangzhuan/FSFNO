# STFNO Copyright (c) 2024, The Regents of the University of California,
# through Lawrence Berkeley National Laboratory (subject to receipt of any
# required approvals from the U.S.Dept. of Energy) and the University of
# California, Berkeley.  All rights reserved.
#
# If you have questions about your rights to use or distribute this software,
# please contact Berkeley Lab's Intellectual Property Office at IPO@lbl.gov.
#
# NOTICE. This Software was developed under funding from the U.S. Department
# of Energy and the U.S. Government consequently retains certain rights.
# As such, the U.S. Government has been granted for itself and others acting
# on its behalf a paid-up, nonexclusive, irrevocable, worldwide license in
# the Software to reproduce, distribute copies to the public, prepare
# derivative works, and perform publicly and display publicly, and to permit
# other to do so.


import numpy


def generate_1d_mesh(i_meshcount,loc_init,loc_final, power_factor=1):
        if power_factor == 1:
            mesh = numpy.linspace(loc_init, loc_final, i_meshcount).transpose()
        else:
            direction = numpy.array(loc_final) - numpy.array(loc_init)
            mesh = numpy.zeros([3, i_meshcount])
            for i_n in range(0, i_meshcount):
                mesh[:, i_n] = loc_init + direction * (float(i_n) / float(i_meshcount - 1)) ** power_factor
        return mesh
    
    
def globl_r_begn_r_end_estmt_theta(S, nx_theta, r_cntr, r_begn_theta0, r_end_theta0):
    globl_r_begn_estmt = numpy.zeros((nx_theta)) + r_begn_theta0 - r_cntr
    globl_r_end_estmt  = numpy.zeros((nx_theta)) + r_end_theta0 - r_cntr
    globl_r_begn_estmt_theta32_r32= numpy.array([0.3640000000000001,0.3689741210937501,0.3739482421875001,
                            0.3838964843750001,0.39881884765625014,0.41871533203125016,
                            0.4485600585937502,0.47840478515625023,0.5032753906250003,
                            0.5082495117187502,0.49332714843750025,0.4634824218750002,
                            0.4286635742187502,0.40379296875000015,0.3838964843750001,
                            0.3739482421875001,0.3689741210937501,0.3739482421875001,
                            0.38887060546875013,0.41374121093750016,0.4435859375000002,
                            0.48835302734375025,0.52814599609375,0.5480424804687498,
                            0.5380942382812499,0.5082495117187502,0.47343066406250023,
                            0.4386118164062502,0.41374121093750016,0.39384472656250014,
                            0.3789223632812501,0.3689741210937501])
    globl_r_end_estmt_theta32_r32= numpy.array([ 0.6823437500000000,0.6972661132812499,0.7519814453124993,
                            0.7917744140624989,0.8663862304687482,0.9559204101562473,
                            1.080273437499996,1.2245229492187446,1.388668945312493,
                            1.488151367187492,1.5528149414062413,1.4185136718749927,
                            1.1449370117187454,0.9658686523437472,0.881308593749998,
                            0.8116708984374987,0.7917744140624989,0.8116708984374987,
                            0.8763344726562481,0.9658686523437472,1.1449370117187454,
                            1.4234877929687426,1.5577890624999913,1.4244233398437423,
                            1.3896044921874926,1.240380859374994,1.0762348632812457,
                            0.9618300781249969,0.8673217773437478,0.7976840820312485,
                            0.7429687499999991,0.6982016601562495])
    globl_r_begn_estmt_theta64_r64= numpy.array([0.3640000000000001,0.3640000000000001,
                                    0.3665074462890626,0.3665074462890626,0.37152233886718766,
                                    0.3740297851562502,0.38155212402343774,0.3890744628906253,
                                    0.39659680175781287,0.40662658691406295,0.41916381835937555,
                                    0.43170104980468815,0.4467457275390633,0.4617904052734384,
                                    0.4768350830078135,0.4893723144531261,0.4994020996093762,
                                    0.5069244384765638,0.5094318847656263,0.5044169921875012,
                                    0.49438720703125116,0.47934252929687604,0.4617904052734384,
                                    0.44423828125000075,0.42919360351562563,0.4141489257812505,
                                    0.4016116943359379,0.3915819091796878,0.38155212402343774,
                                    0.3765372314453127,0.37152233886718766,0.36901489257812514,
                                    0.36901489257812514,0.37152233886718766,0.3740297851562502,
                                    0.3790446777343752,0.3890744628906253,0.3991042480468754,
                                    0.411641479492188,0.4266861572265631,0.44423828125000075,
                                    0.4642978515625009,0.4843574218750011,0.5069244384765638,
                                    0.5244765625000014,0.5395212402343765,0.5470435791015641,
                                    0.5470435791015641,0.537013793945314,0.5244765625000014,
                                    0.5069244384765638,0.4893723144531261,0.4718201904296885,
                                    0.45426806640625084,0.4392233886718757,0.4241787109375006,
                                    0.411641479492188,0.3991042480468754,0.3915819091796878,
                                    0.38405957031250026,0.3765372314453127,0.37152233886718766,
                                    0.36901489257812514,0.3665074462890626])
    globl_r_end_estmt_theta64_r64= numpy.array([0.684953125,0.6874605712890626,0.6974903564453127,
                                    0.7125350341796878,0.7526541748046881,0.7752211914062508,
                                    0.795280761718751,0.8379073486328138,0.867996704101564,
                                    0.920653076171877,0.9582647705078148,1.0284732666015641,
                                    1.0786221923828123,1.1713977050781215,1.224054077148432,
                                    1.3143221435546788,1.3920529785156135,1.4121125488281128,
                                    1.4898433837890475,1.5324699707031084,1.5525295410156077,
                                    1.517425292968734,1.4196348876953,1.2867402343749923,
                                    1.1463232421874974,1.0410104980468762,0.9682945556640649,
                                    0.9181456298828145,0.8805339355468766,0.8429222412109388,
                                    0.8128328857421886,0.800295654296876,0.795280761718751,
                                    0.8028031005859385,0.8128328857421886,0.8404147949218763,
                                    0.8805339355468766,0.9181456298828145,0.9682945556640649,
                                    1.0410104980468762,1.1463232421874974,1.2842327880859299,
                                    1.4246497802734248,1.5324699707031084,1.5625593261718573,
                                    1.474798706054673,1.4257550600113253,1.419558560469628,
                                    1.389469205000879,1.3142458163290067,1.2390224276571344,
                                    1.1587841464071373,1.0785458651571402,1.0258894930868296,
                                    0.9606958895712052,0.9230841952352674,0.8704278231649545,
                                    0.8428459139852668,0.7968110462647238,0.7742440296631611,
                                    0.7466621204834734,0.7115578724365981,0.6990206409912855,
                                    0.6889908558350354])
    if S == 32: 
        globl_r_begn_estmt = globl_r_begn_estmt_theta32_r32
        globl_r_end_estmt = globl_r_end_estmt_theta32_r32 
    elif S == 64:     
        globl_r_begn_estmt = globl_r_begn_estmt_theta64_r64
        globl_r_end_estmt = globl_r_end_estmt_theta64_r64
    else:
        exit(1)
    return (globl_r_begn_estmt, globl_r_end_estmt)
    